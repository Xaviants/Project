package DND_QUIZ;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

import ConnectionProvider.ConnectionProvider;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;

/**
 * Kelas LoginStudent adalah JFrame yang digunakan untuk login pengguna.
 * Kelas ini menyediakan antarmuka pengguna untuk memasukkan username dan password.
 * 
 * 
 * 
 * @author DAFFA
 */
public class LoginStudent extends javax.swing.JFrame implements ExceptionError {

    /**
     * Membuat form baru dari LoginStudent.
     * Konstruktor ini memanggil metode initComponents untuk menginisialisasi komponen form.
     */
    public LoginStudent() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtUsname = new javax.swing.JTextField();
        pwField = new javax.swing.JPasswordField();
        showPWBtn = new javax.swing.JRadioButton();
        lgnBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        rgsHereBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtUsname.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(txtUsname, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 270, 290, 60));

        pwField.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        getContentPane().add(pwField, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 430, 290, 60));

        showPWBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        showPWBtn.setForeground(new java.awt.Color(33, 161, 218));
        showPWBtn.setText("Show Password");
        showPWBtn.setMaximumSize(new java.awt.Dimension(39, 40));
        showPWBtn.setPreferredSize(new java.awt.Dimension(35, 35));
        showPWBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPWBtnActionPerformed(evt);
            }
        });
        getContentPane().add(showPWBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 510, 160, 30));

        lgnBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lgnBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_backgrounds_images/tombol login (1).png"))); // NOI18N
        lgnBtn.setContentAreaFilled(false);
        lgnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lgnBtnActionPerformed(evt);
            }
        });
        getContentPane().add(lgnBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 560, 120, -1));

        backBtn.setBackground(new java.awt.Color(48, 149, 220));
        backBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_backgrounds_images/tombol back (1).png"))); // NOI18N
        backBtn.setContentAreaFilled(false);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 560, 120, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(34, 162, 216));
        jLabel1.setText("Don't have an account?");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 640, -1, 30));

        rgsHereBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        rgsHereBtn.setForeground(new java.awt.Color(34, 162, 216));
        rgsHereBtn.setText("Register here");
        rgsHereBtn.setContentAreaFilled(false);
        rgsHereBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rgsHereBtnActionPerformed(evt);
            }
        });
        getContentPane().add(rgsHereBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 640, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons_backgrounds_images/LOGIN STUDENT.jpg"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-3, 0, 1410, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Metode ini dipanggil ketika tombol 'Show Password' ditekan.
     * Menampilkan atau menyembunyikan karakter kata sandi berdasarkan pilihan pengguna.
     * 
     * @param evt peristiwa yang dipicu oleh klik tombol Tampilkan Kata Sandi
     */
    private void showPWBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPWBtnActionPerformed
        if(showPWBtn.isSelected()){
            pwField.setEchoChar((char)0);
        }else{
            pwField.setEchoChar('*');
        }
    }//GEN-LAST:event_showPWBtnActionPerformed
    
    /**
     * Metode ini dipanggil ketika tombol 'Login' ditekan.
     * Memproses data input dari pengguna dan melakukan validasi serta login pengguna.
     * 
     * @param evt peristiwa yang dipicu oleh klik tombol Login
     */
    private void lgnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lgnBtnActionPerformed
        String usname = txtUsname.getText();
        String pw = new String(pwField.getPassword());
        
        if(usname.isEmpty() && pw.isEmpty()){
            JOptionPane.showMessageDialog(this, "Username dan Password belum diisi", "WARNING", JOptionPane.WARNING_MESSAGE);
        }else{
            if(usname.isEmpty()){
                JOptionPane.showMessageDialog(this, "Username belum diisi", "WARNING", JOptionPane.WARNING_MESSAGE);
            }else{
                if(pw.isEmpty()){
                    JOptionPane.showMessageDialog(this, "Password belum diisi", "WARNING", JOptionPane.WARNING_MESSAGE);
                }else{
                    try{
                        if(isUsnameTaken(usname)){
                            if(isPWTaken(pw)){
                                String qry = " SELECT * FROM data_username_password WHERE password = ?";
   
                                Connection cnt = ConnectionProvider.getConnected();                               
                                PreparedStatement preState = cnt.prepareCall(qry);
                                preState.setString(1, pw);
                                ResultSet resSet = preState.executeQuery();

                                if(resSet.next()){
                                    JOptionPane.showMessageDialog(this, "HALO, " + usname, "INFORMASI", JOptionPane.INFORMATION_MESSAGE);

                                    setVisible(false);
                                    new StudentDetails().setVisible(true);
                                }else{
                                    JOptionPane.showMessageDialog(this, "Login Gagal", "INFORMASI", JOptionPane.INFORMATION_MESSAGE);
                                }
                            }else{
                                JOptionPane.showMessageDialog(this, "Password tidak sesuai", "WARNING", JOptionPane.WARNING_MESSAGE);
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Username tidak sesuai", "Informasi", JOptionPane.ERROR_MESSAGE);
                        }
                    }catch(Exception e){
                        ExceptionError.errorMessage(e);
                    }
                }
            }
        }
    }//GEN-LAST:event_lgnBtnActionPerformed
    
    /**
     * Metode ini dipanggil ketika tombol 'Back' ditekan.
     * Menyembunyikan jendela saat ini dan menampilkan jendela indeks.
     * 
     * @param evt peristiwa yang dipicu oleh klik tombol Kembali
     */
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        setVisible(false);
        new Index().setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed
    
    /**
     * Metode ini dipanggil ketika tombol 'Register here' ditekan.
     * Menyembunyikan jendela saat ini dan menampilkan jendela registrasi pengguna.
     * 
     * @param evt peristiwa yang dipicu oleh klik tombol Daftar di sini
     */
    private void rgsHereBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rgsHereBtnActionPerformed
        setVisible(false);
        new RegisterStudent().setVisible(true);
    }//GEN-LAST:event_rgsHereBtnActionPerformed
    
    /**
     * Memeriksa apakah password sudah digunakan oleh pengguna lain.
     * 
     * @param pw kata sandi yang akan diperiksa
     * @return true jika password sudah digunakan, false jika belum
     * @throws SQLException jika terjadi kesalahan SQL
     */
    private boolean isPWTaken(String pw) throws SQLException {
        Statement state = ConnectionProvider.getConnected().createStatement();
        ResultSet resSet = state.executeQuery("SELECT * FROM data_username_password WHERE password = '" + pw + "'");
        return resSet.next();
    }
    
    /**
     * Memeriksa apakah username sudah digunakan oleh pengguna lain.
     * 
     * @param usname nama pengguna yang akan diperiksa
     * @return true jika username sudah digunakan, false jika belum
     * @throws SQLException jika terjadi kesalahan SQL
     */
    private boolean isUsnameTaken(String usname) throws SQLException {
        Statement state = ConnectionProvider.getConnected().createStatement();
        ResultSet resSet = state.executeQuery("SELECT * FROM data_username_password WHERE username = '" + usname + "'");
        return resSet.next();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton lgnBtn;
    private javax.swing.JPasswordField pwField;
    private javax.swing.JButton rgsHereBtn;
    private javax.swing.JRadioButton showPWBtn;
    private javax.swing.JTextField txtUsname;
    // End of variables declaration//GEN-END:variables
}
